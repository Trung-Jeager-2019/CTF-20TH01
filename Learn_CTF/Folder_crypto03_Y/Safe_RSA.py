p = 12476682960795779723419989287306239606331347310604553825605263028855086418051086300006278888049896375754096827163121306696417314531666670662341673511789487

n = 132584825018166892036247821308754740533575984294912859418971244776769293548107490233355297115861255963076622070127865142205107181207673702587393494860613316425336008819081169031194442020498569601888048767385032364436395644961861833287918315793817245497784496450110641025476274978672298849300106831336352152221

e = 65537

ct = 126028558760741438230925566962334702896791270808414391828894437291120207835997354509410869568173448979784329516392078311028442458946906210498176026685581176779209904039179175088984829699783861789249260322822491502790157863487861171337660785254139478229397872969136220001367017765809130698515063339265165085655


# We have p | n | e | c | ?:q
# Library
import gmpy2
import binascii
import base64

# n = p*q
# p = n // q
q = n //p

r = (q-1)*(p-1)

d = gmpy2.divm(1,e,r)
# e = gmpy2.divm(1,d,r)

pt = gmpy2.powmod(ct,d,n)


print('Kết quả Byte Hex: ', pt)
print('Kết quả chuỗi Hex: ',binascii.unhexlify(hex(int(pt))[2:]))


# pt = 168674572898678246183111547923985547062218148376430
# result = b'simple_rsa_decryption'
